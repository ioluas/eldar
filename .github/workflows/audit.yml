name: Audit

on:
  push:
  pull_request:
    branches: [main]

jobs:
  audit:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [ 'stable', 'oldstable' ]
      fail-fast: false

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 2

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}
        cache: true

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Verify dependencies
      run: go mod verify

    - name: dependencies
      run: sudo apt-get install -y --no-install-recommends gcc libgl1-mesa-dev xorg-dev libxkbcommon-dev

    - name: Build
      run: go build -v ./...

    - name: Run go vet
      run: go vet ./...

    - name: staticcheck
      uses: dominikh/staticcheck-action@v1.3.1
      with:
        version: 'latest'
        min-go-version: '1.24'
        install-go: false

    - name: golint
      uses: golangci/golangci-lint-action@v8
      with: 
        version: v2.1
        skip-cache: true
        skip-save-cache: true

    - name: Run tests with coverage
      run: go test -race -coverprofile=coverage.out -vet=off ./...

    - name: Upload coverage artifact
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coverage.out

    - name: Security audit (govulncheck)
      run: go install golang.org/x/vuln/cmd/govulncheck@latest && govulncheck ./...
